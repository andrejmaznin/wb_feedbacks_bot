import json

import telebot

from app.connections import bot, get_update_queue
from modules.cabinets.exports import get_formatted_list_of_cabinets
from modules.cabinets.internals import get_refresh_messages_for_client
from modules.commands import Commands, initiate_command
from modules.feedbacks.schemas import ReplySettingsSchema
from modules.users.exports import get_formatted_list_of_users
from modules.users.utils import is_owner
from modules.wb_bot.markups.cabinets import get_cabinets_reply_markup
from modules.wb_bot.markups.root import get_root_reply_markup
from modules.wb_bot.markups.users import get_users_reply_markup
from modules.wb_bot.root.internals import start_bot, stop_bot


def handler(message: telebot.types.Message, client_id: str):
    command = message.text

    if command == 'üü¢ –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞':
        start_bot(client_id=client_id)
        print('Started bot')
        bot.send_message(
            chat_id=message.from_user.id,
            text='–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω',
            reply_markup=get_root_reply_markup(client_id=client_id)
        )

    elif command == 'üî¥ –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–æ—Ç–∞':
        stop_bot(client_id=client_id)
        print('Stopped bot')
        bot.send_message(
            chat_id=message.from_user.id,
            text='–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω',
            reply_markup=get_root_reply_markup(client_id=client_id)
        )

    elif command == 'üîà –ñ–∞–ª–æ–≤–∞—Ç—å—Å—è':
        settings = ReplySettingsSchema.get_for_client(client_id=client_id)
        settings.set_complaints(complain=True)
        bot.send_message(
            chat_id=message.from_user.id,
            text='–ë–æ—Ç –±—É–¥–µ—Ç –∂–∞–ª–æ–≤–∞—Ç—å—Å—è –Ω–∞ –Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–µ (1-3 –∑–≤–µ–∑–¥—ã) –æ—Ç–∑—ã–≤—ã',
            reply_markup=get_root_reply_markup(client_id=client_id)
        )

    elif command == 'üîá –ù–µ –∂–∞–ª–æ–≤–∞—Ç—å—Å—è':
        settings = ReplySettingsSchema.get_for_client(client_id=client_id)
        settings.set_complaints(complain=False)
        bot.send_message(
            chat_id=message.from_user.id,
            text='–ë–æ—Ç –Ω–µ –±—É–¥–µ—Ç –∂–∞–ª–æ–≤–∞—Ç—å—Å—è –Ω–∞ –Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–µ (1-3 –∑–≤–µ–∑–¥—ã) –æ—Ç–∑—ã–≤—ã',
            reply_markup=get_root_reply_markup(client_id=client_id)
        )

    elif command == 'üîÑ –û–±–Ω–æ–≤–∏—Ç—å –æ—Ç–≤–µ—Ç—ã':
        update_queue = get_update_queue()

        tasks = get_refresh_messages_for_client(client_id=client_id)
        for task in tasks:
            update_queue.send_message(
                MessageBody=json.dumps(task)
            )

        bot.send_message(
            chat_id=message.from_user.id,
            text='–û—Ç–≤–µ—Ç—ã –Ω–∞ –æ—Ç–∑—ã–≤—ã –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è!',
            reply_markup=get_root_reply_markup(client_id=client_id)
        )

    elif command == 'üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏':
        markup = None
        if is_owner(
            client_id=client_id,
            telegram_id=message.from_user.id,
            username=message.from_user.username
        ):
            initiate_command(
                client_id=client_id,
                telegram_id=message.from_user.id,
                command=Commands.USERS
            )
            markup = get_users_reply_markup()

        bot.send_message(
            chat_id=message.from_user.id,
            text=get_formatted_list_of_users(client_id),
            reply_markup=markup,
            parse_mode='MarkdownV2'
        )

    elif command == 'üíº –ö–∞–±–∏–Ω–µ—Ç—ã —Å–µ–ª–ª–µ—Ä–∞':
        initiate_command(
            client_id=client_id,
            telegram_id=message.from_user.id,
            command=Commands.CABINETS
        )
        bot.send_message(
            chat_id=message.from_user.id,
            text=get_formatted_list_of_cabinets(client_id),
            reply_markup=get_cabinets_reply_markup(client_id=client_id),
            parse_mode='MarkdownV2',
            disable_web_page_preview=True
        )

    else:
        bot.send_message(
            chat_id=message.from_user.id,
            text='–ù–µ –ø–æ–Ω—è–ª–∏ –≤–∞—Å',
            reply_markup=get_root_reply_markup(client_id)
        )
